{"ast":null,"code":"import lax from 'lax.js';\nimport { useRef, useEffect } from 'react';\nvar selector = 'lax';\n\nfunction useLax(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      breakpoints = _ref.breakpoints,\n      className = _ref.className;\n\n  var requestRef = useRef();\n  selector = className || selector;\n  useEffect(function () {\n    lax.setup({\n      breakpoints: breakpoints,\n      selector: \".\" + selector\n    });\n\n    var updateLax = function updateLax() {\n      lax.update(window.scrollY);\n      requestRef.current = window.requestAnimationFrame(updateLax);\n    };\n\n    requestRef.current = window.requestAnimationFrame(updateLax);\n    return function () {\n      if (requestRef.current) {\n        window.cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [breakpoints, className]);\n}\n\nfunction useLaxElement() {\n  var ref = useRef();\n  useEffect(function () {\n    var currentNode = ref.current;\n\n    if (currentNode && currentNode.classList) {\n      currentNode.classList.add(selector);\n    }\n\n    lax.addElement(currentNode);\n    return function () {\n      lax.removeElement(currentNode);\n    };\n  }, []);\n  return ref;\n}\n\nexport { useLax, useLaxElement };","map":{"version":3,"sources":["/Users/whippleespinoza/Documents/html/Scoda-Fianzer/Scoda/node_modules/use-lax/dist/use-lax.esm.js"],"names":["lax","useRef","useEffect","selector","useLax","_temp","_ref","breakpoints","className","requestRef","setup","updateLax","update","window","scrollY","current","requestAnimationFrame","cancelAnimationFrame","useLaxElement","ref","currentNode","classList","add","addElement","removeElement"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA,IAAIC,QAAQ,GAAG,KAAf;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,WAAW,GAAGD,IAAI,CAACC,WADvB;AAAA,MAEIC,SAAS,GAAGF,IAAI,CAACE,SAFrB;;AAIA,MAAIC,UAAU,GAAGR,MAAM,EAAvB;AACAE,EAAAA,QAAQ,GAAGK,SAAS,IAAIL,QAAxB;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpBF,IAAAA,GAAG,CAACU,KAAJ,CAAU;AACRH,MAAAA,WAAW,EAAEA,WADL;AAERJ,MAAAA,QAAQ,EAAE,MAAMA;AAFR,KAAV;;AAKA,QAAIQ,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnCX,MAAAA,GAAG,CAACY,MAAJ,CAAWC,MAAM,CAACC,OAAlB;AACAL,MAAAA,UAAU,CAACM,OAAX,GAAqBF,MAAM,CAACG,qBAAP,CAA6BL,SAA7B,CAArB;AACD,KAHD;;AAKAF,IAAAA,UAAU,CAACM,OAAX,GAAqBF,MAAM,CAACG,qBAAP,CAA6BL,SAA7B,CAArB;AACA,WAAO,YAAY;AACjB,UAAIF,UAAU,CAACM,OAAf,EAAwB;AACtBF,QAAAA,MAAM,CAACI,oBAAP,CAA4BR,UAAU,CAACM,OAAvC;AACD;AACF,KAJD;AAKD,GAjBQ,EAiBN,CAACR,WAAD,EAAcC,SAAd,CAjBM,CAAT;AAkBD;;AAED,SAASU,aAAT,GAAyB;AACvB,MAAIC,GAAG,GAAGlB,MAAM,EAAhB;AACAC,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIkB,WAAW,GAAGD,GAAG,CAACJ,OAAtB;;AAEA,QAAIK,WAAW,IAAIA,WAAW,CAACC,SAA/B,EAA0C;AACxCD,MAAAA,WAAW,CAACC,SAAZ,CAAsBC,GAAtB,CAA0BnB,QAA1B;AACD;;AAEDH,IAAAA,GAAG,CAACuB,UAAJ,CAAeH,WAAf;AACA,WAAO,YAAY;AACjBpB,MAAAA,GAAG,CAACwB,aAAJ,CAAkBJ,WAAlB;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAOD,GAAP;AACD;;AAED,SAASf,MAAT,EAAiBc,aAAjB","sourcesContent":["import lax from 'lax.js';\nimport { useRef, useEffect } from 'react';\n\nvar selector = 'lax';\n\nfunction useLax(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      breakpoints = _ref.breakpoints,\n      className = _ref.className;\n\n  var requestRef = useRef();\n  selector = className || selector;\n  useEffect(function () {\n    lax.setup({\n      breakpoints: breakpoints,\n      selector: \".\" + selector\n    });\n\n    var updateLax = function updateLax() {\n      lax.update(window.scrollY);\n      requestRef.current = window.requestAnimationFrame(updateLax);\n    };\n\n    requestRef.current = window.requestAnimationFrame(updateLax);\n    return function () {\n      if (requestRef.current) {\n        window.cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [breakpoints, className]);\n}\n\nfunction useLaxElement() {\n  var ref = useRef();\n  useEffect(function () {\n    var currentNode = ref.current;\n\n    if (currentNode && currentNode.classList) {\n      currentNode.classList.add(selector);\n    }\n\n    lax.addElement(currentNode);\n    return function () {\n      lax.removeElement(currentNode);\n    };\n  }, []);\n  return ref;\n}\n\nexport { useLax, useLaxElement };\n"]},"metadata":{},"sourceType":"module"}