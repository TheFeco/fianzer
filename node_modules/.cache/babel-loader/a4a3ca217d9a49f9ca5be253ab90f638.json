{"ast":null,"code":"import { useEffect, useState } from \"react\";\n\nfunction useWindowResizeListener() {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  function onResize() {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n    const el = document.querySelectorAll(\".dropdown\");\n\n    if (width > 991) {\n      el.forEach(item => {\n        if (item.children[1]) {\n          item.addEventListener(\"mouseover\", event => {\n            item.children[1].classList.add(\"fadeIn\");\n            item.children[1].classList.remove(\"fadeOut\");\n            item.children[1].style.display = \"block\";\n          });\n          item.addEventListener(\"mouseout\", event => {\n            item.children[1].classList.add(\"fadeOut\");\n            item.children[1].classList.remove(\"fadeIn\");\n            item.children[1].style.display = \"none\";\n          });\n        }\n      });\n    }\n\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [width]);\n  return {\n    width,\n    height\n  };\n}\n\nexport default useWindowResizeListener;","map":{"version":3,"sources":["/Users/whippleespinoza/Documents/html/Scoda-react/Scoda/src/helpers/useWindowResizeListener.js"],"names":["useEffect","useState","useWindowResizeListener","width","setWidth","window","innerWidth","height","setHeight","innerHeight","onResize","addEventListener","el","document","querySelectorAll","forEach","item","children","event","classList","add","remove","style","display","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,uBAAT,GAAmC;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAACI,MAAM,CAACC,UAAR,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACI,MAAM,CAACI,WAAR,CAApC;;AACA,WAASC,QAAT,GAAoB;AAClBN,IAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACAE,IAAAA,SAAS,CAACH,MAAM,CAACI,WAAR,CAAT;AACD;;AACDT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,QAAlC;AACA,UAAME,EAAE,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAX;;AACA,QAAIX,KAAK,GAAG,GAAZ,EAAiB;AACfS,MAAAA,EAAE,CAACG,OAAH,CAAYC,IAAD,IAAU;AACnB,YAAIA,IAAI,CAACC,QAAL,CAAc,CAAd,CAAJ,EAAsB;AACpBD,UAAAA,IAAI,CAACL,gBAAL,CAAsB,WAAtB,EAAoCO,KAAD,IAAW;AAC5CF,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBE,SAAjB,CAA2BC,GAA3B,CAA+B,QAA/B;AACAJ,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBE,SAAjB,CAA2BE,MAA3B,CAAkC,SAAlC;AACAL,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBK,KAAjB,CAAuBC,OAAvB,GAAiC,OAAjC;AACD,WAJD;AAKAP,UAAAA,IAAI,CAACL,gBAAL,CAAsB,UAAtB,EAAmCO,KAAD,IAAW;AAC3CF,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBE,SAAjB,CAA2BC,GAA3B,CAA+B,SAA/B;AACAJ,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBE,SAAjB,CAA2BE,MAA3B,CAAkC,QAAlC;AACAL,YAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBK,KAAjB,CAAuBC,OAAvB,GAAiC,MAAjC;AACD,WAJD;AAKD;AACF,OAbD;AAcD;;AACD,WAAO,MAAMlB,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC,CAAb;AACD,GApBQ,EAoBN,CAACP,KAAD,CApBM,CAAT;AAqBA,SAAO;AACLA,IAAAA,KADK;AAELI,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeL,uBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction useWindowResizeListener() {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  function onResize() {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n    const el = document.querySelectorAll(\".dropdown\");\n    if (width > 991) {\n      el.forEach((item) => {\n        if (item.children[1]) {\n          item.addEventListener(\"mouseover\", (event) => {\n            item.children[1].classList.add(\"fadeIn\");\n            item.children[1].classList.remove(\"fadeOut\");\n            item.children[1].style.display = \"block\";\n          });\n          item.addEventListener(\"mouseout\", (event) => {\n            item.children[1].classList.add(\"fadeOut\");\n            item.children[1].classList.remove(\"fadeIn\");\n            item.children[1].style.display = \"none\";\n          });\n        }\n      });\n    }\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [width]);\n  return {\n    width,\n    height,\n  };\n}\n\nexport default useWindowResizeListener;\n"]},"metadata":{},"sourceType":"module"}